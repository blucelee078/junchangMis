/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UI.java
 *
 * Created on 2011-5-6, 13:28:39
 */
package junchangmis.codecSetting;

import junchangmis.*;
import javax.swing.JOptionPane;
import java.util.Vector;
import java.awt.event.WindowListener;
import java.awt.event.WindowEvent;
import java.awt.event.MouseListener;

/**
 *
 * @author developers
 */
public class codecUI extends javax.swing.JFrame implements WindowListener {

    private Vector<String> specialtyCode = new Vector<String>();
    private Vector<String> subSpecCode = new Vector<String>();
    private Vector<String> specialtyMeaning = new Vector<String>();
    private Vector<String> subSpecMeaning = new Vector<String>();
    private Vector<String> yearClassNum = new Vector<String>();
    MainFrame parent;

    /** Creates new form UI */
    public codecUI(MainFrame parent) {
        this.parent = parent;
        initComponents();
        updateSpecList();//更新视图
        updateSubSpecList();
        updateYearClassNumList();
        for (int i = 0; i < this.specialtyMeaning.size(); i++) {
            System.out.println(this.specialtyMeaning.get(i));
        }
        this.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
        this.addWindowListener(this);
        this.setLocationRelativeTo(null);
        this.setTitle("学生编码管理");
    }

    public void windowActivated(WindowEvent arg0) { //设置为活动窗口时触发
        //System.out.println("windowActivated -->窗口被选中。");
    }

    public void windowClosed(WindowEvent arg0) { //窗口被关闭时触发
        //System.out.println("windowClosed -->窗口被关闭。");
        //parent.setVisible(true);
    }

    public void windowClosing(WindowEvent arg0) { //窗口关闭时触发,按下关闭按钮
        System.out.println("windowClosing -->窗口关闭。");
        parent.setVisible(true);
    }

    public void windowDeactivated(WindowEvent arg0) { //设置为非活动窗口时触发
        //System.out.println("windowDeactivated -->取消窗口选中。");
    }

    public void windowDeiconified(WindowEvent arg0) { //窗口从最小化还原时触发
        //System.out.println("windowDeiconified -->窗口从最小化恢复。");
    }

    public void windowIconified(WindowEvent arg0) { //窗口最小化时触发
        //System.out.println("windowIconified -->窗口最小化。");
    }

    public void windowOpened(WindowEvent arg0) { //窗口最小化时触发
        //System.out.println("windowv -->窗口被打开。");
    }

    public void updateSpecList() {
        codecMethod.initSpecialtyCode(specialtyCode, specialtyMeaning);//获得所有专业码
        String[] contentSpec = new String[this.specialtyCode.size()];
        for (int i = 0; i < this.specialtyCode.size(); i++) {
            contentSpec[i] = this.specialtyCode.get(i) + "(" + this.specialtyMeaning.get(i) + ")";
        }
        jComboBoxSpecialty.setModel(new javax.swing.DefaultComboBoxModel(contentSpec));//填充专业码列表
    }

    public void updateSubSpecList() {
        //codecMethod.initSubSpecCode(subSpecCode);
        if (this.jComboBoxSpecialty.getSelectedIndex() != -1) {//如果当前专业码列表有选项
            codecMethod.initSubSpecCodeSons(subSpecCode, subSpecMeaning, this.jComboBoxSpecialty.getSelectedItem().toString());//则根据该选项获得其附属的小专业码
            String[] contentSubSpec = new String[this.subSpecCode.size()];
            for (int i = 0; i < this.subSpecCode.size(); i++) {
                contentSubSpec[i] = this.subSpecCode.get(i) + "(" + this.subSpecMeaning.get(i) + ")";//然后填充小专业码列表
            }
            jComboBoxSubSpec.setModel(new javax.swing.DefaultComboBoxModel(contentSubSpec));
        } else {
            jComboBoxSubSpec.setModel(new javax.swing.DefaultComboBoxModel());//否则小专业码列表置空
        }
    }

    public void updateYearClassNumList() {
        if (this.jComboBoxSpecialty.getSelectedIndex() != -1 && this.jComboBoxSubSpec.getSelectedIndex() != -1) {
            codecMethod.iniYearClassNumSons(yearClassNum, this.jComboBoxSpecialty.getSelectedItem().toString().substring(0, 1) +
                    this.jComboBoxSubSpec.getSelectedItem().toString().substring(0, 2));
            System.out.println(this.jComboBoxSpecialty.getSelectedItem().toString().substring(0, 1) +
                    this.jComboBoxSubSpec.getSelectedItem().toString().substring(0, 2));
            String[] contentYearClassNum = new String[this.yearClassNum.size()];
            for (int i = 0; i < this.yearClassNum.size(); i++) {
                contentYearClassNum[i] = this.yearClassNum.get(i);
            }
            jComboBoxYearClassNum.setModel(new javax.swing.DefaultComboBoxModel(contentYearClassNum));
        } else {
            jComboBoxYearClassNum.setModel(new javax.swing.DefaultComboBoxModel());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPaneSet = new javax.swing.JTabbedPane();
        jPanelSet = new javax.swing.JPanel();
        jLabelSpecialtyCode = new javax.swing.JLabel();
        jLabelSubSpecCode = new javax.swing.JLabel();
        jTextFieldSpecialtyCode = new javax.swing.JTextField();
        jTextFieldSubSpecCode = new javax.swing.JTextField();
        jLabelSpecialtyMeaning = new javax.swing.JLabel();
        jLabelSubSpecMeaning = new javax.swing.JLabel();
        jTextFieldSpecialtyMeaning = new javax.swing.JTextField();
        jTextFieldSubSpecMeaning = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jLabelYear = new javax.swing.JLabel();
        jTextFieldYear = new javax.swing.JTextField();
        jLabelClassNum = new javax.swing.JLabel();
        jTextFieldClassNum = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabelSpecialty = new javax.swing.JLabel();
        jComboBoxSpecialty = new javax.swing.JComboBox();
        jLabelSubSpec = new javax.swing.JLabel();
        jComboBoxSubSpec = new javax.swing.JComboBox();
        jButtonDelete = new javax.swing.JButton();
        jLabelClass = new javax.swing.JLabel();
        jComboBoxYearClassNum = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jLabelSpecialtyCode.setText("专业码");

        jLabelSubSpecCode.setText("小专业码");

        jTextFieldSpecialtyCode.setText("");
        jTextFieldSpecialtyCode.setToolTipText("输入完成后按下回车键可查看是否存在该专业");
        jTextFieldSpecialtyCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSpecialtyCodeActionPerformed(evt);
            }
        });

        jTextFieldSubSpecCode.setText("");
        jTextFieldSubSpecCode.setToolTipText("输入完成后按下回车键可查看是否存在该小专业");
        jTextFieldSubSpecCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSubSpecCodeActionPerformed(evt);
            }
        });

        jLabelSpecialtyMeaning.setText("专业名称");

        jLabelSubSpecMeaning.setText("小专业名称");

        jTextFieldSpecialtyMeaning.setText("");

        jTextFieldSubSpecMeaning.setText("");

        jButtonAdd.setText("添加");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jLabelYear.setText("年份");

        jTextFieldYear.setText("");

        jLabelClassNum.setText("班号");

        jTextFieldClassNum.setText("");

        javax.swing.GroupLayout jPanelSetLayout = new javax.swing.GroupLayout(jPanelSet);
        jPanelSet.setLayout(jPanelSetLayout);
        jPanelSetLayout.setHorizontalGroup(
            jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSetLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(jButtonAdd)
                .addContainerGap(176, Short.MAX_VALUE))
            .addGroup(jPanelSetLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanelSetLayout.createSequentialGroup()
                            .addComponent(jLabelSpecialtyCode)
                            .addGap(40, 40, 40)
                            .addComponent(jTextFieldSpecialtyCode, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanelSetLayout.createSequentialGroup()
                            .addComponent(jLabelSubSpecCode)
                            .addGap(28, 28, 28)
                            .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextFieldYear)
                                .addComponent(jTextFieldSubSpecCode, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE))))
                    .addComponent(jLabelYear))
                .addGap(42, 42, 42)
                .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSubSpecMeaning)
                    .addComponent(jLabelSpecialtyMeaning)
                    .addComponent(jLabelClassNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSpecialtyMeaning, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(jTextFieldSubSpecMeaning, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(jTextFieldClassNum))
                .addGap(41, 41, 41))
        );

        jPanelSetLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextFieldSpecialtyMeaning, jTextFieldSubSpecMeaning});

        jPanelSetLayout.setVerticalGroup(
            jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSetLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSpecialtyCode)
                    .addComponent(jTextFieldSpecialtyCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSpecialtyMeaning)
                    .addComponent(jTextFieldSpecialtyMeaning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSubSpecCode)
                    .addComponent(jTextFieldSubSpecCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSubSpecMeaning)
                    .addComponent(jTextFieldSubSpecMeaning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelSetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelYear)
                    .addComponent(jTextFieldYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelClassNum)
                    .addComponent(jTextFieldClassNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jButtonAdd)
                .addContainerGap())
        );

        jTabbedPaneSet.addTab("添加", jPanelSet);

        jLabelSpecialty.setText("专业码");

        String []contentSpec=new String [this.specialtyCode.size()];
        for(int i=0;i<this.specialtyCode.size();i++){
            contentSpec[i]=this.specialtyCode.get(i);
        }
        jComboBoxSpecialty.setModel(new javax.swing.DefaultComboBoxModel(contentSpec));
        jComboBoxSpecialty.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSpecialtyItemStateChanged(evt);
            }
        });

        jLabelSubSpec.setText("小专业码");

        String []contentSubSpec=new String [this.subSpecCode.size()];
        for(int i=0;i<this.subSpecCode.size();i++){
            contentSubSpec[i]=this.subSpecCode.get(i);
        }
        jComboBoxSubSpec.setModel(new javax.swing.DefaultComboBoxModel(contentSubSpec));
        jComboBoxSubSpec.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxSubSpecItemStateChanged(evt);
            }
        });

        jButtonDelete.setText("删除");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabelClass.setText("班级");

        String []contentYearClassNum=new String [this.yearClassNum.size()];
        for(int i=0;i<this.yearClassNum.size();i++){
            contentYearClassNum[i]=this.yearClassNum.get(i);
        }
        jComboBoxYearClassNum.setModel(new javax.swing.DefaultComboBoxModel(contentYearClassNum));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSubSpec)
                    .addComponent(jLabelSpecialty)
                    .addComponent(jLabelClass))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonDelete)
                    .addComponent(jComboBoxSubSpec, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxSpecialty, 0, 126, Short.MAX_VALUE)
                    .addComponent(jComboBoxYearClassNum, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(106, 106, 106))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSpecialty)
                    .addComponent(jComboBoxSpecialty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSubSpec)
                    .addComponent(jComboBoxSubSpec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelClass)
                    .addComponent(jComboBoxYearClassNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jButtonDelete)
                .addContainerGap())
        );

        jTabbedPaneSet.addTab("查看", jPanel1);

        getContentPane().add(jTabbedPaneSet);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        //添加专业码
        //如果不存在该专业码才需添加到数据库
        if (codecMethod.hasSpecialtyExisted(this.jTextFieldSpecialtyCode.getText(), this.jTextFieldSpecialtyMeaning.getText()) == false) {
            codecMethod.addSpecialty(this.jTextFieldSpecialtyCode.getText(), this.jTextFieldSpecialtyMeaning.getText());
        }
        //添加小专业码
        //如果不存在该小专业码才需添加到数据库
        if (codecMethod.hasSubSpecExisted(this.jTextFieldSubSpecCode.getText(), this.jTextFieldSubSpecMeaning.getText()) == false) {
            codecMethod.addSubSpecialty(this.jTextFieldSubSpecCode.getText(), this.jTextFieldSubSpecMeaning.getText(),
                    this.jTextFieldSpecialtyCode.getText() + "(" + this.jTextFieldSpecialtyMeaning.getText() + ")");
        }
        //添加完整的专业班级码
        //如果不存在该完整的专业班级码才需添加到数据库
        if (codecMethod.hasCodeSumExisted(this.jTextFieldSpecialtyCode.getText() + this.jTextFieldSubSpecCode.getText() +
                this.jTextFieldYear.getText() + this.jTextFieldClassNum.getText()) == false) {
            codecMethod.addCodeSum(this.jTextFieldSpecialtyCode.getText() + this.jTextFieldSubSpecCode.getText() +
                    this.jTextFieldYear.getText() + this.jTextFieldClassNum.getText(),
                    this.jTextFieldSpecialtyMeaning.getText() + " " + this.jTextFieldSubSpecMeaning.getText() + " " +
                    this.jTextFieldYear.getText() + "-" + this.jTextFieldClassNum.getText() + "班",
                    this.jTextFieldSpecialtyCode.getText() + this.jTextFieldSubSpecCode.getText());
            JOptionPane.showConfirmDialog(null, "添加成功！", "提示", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showConfirmDialog(null, "已存在该专业班级！", "提示", JOptionPane.CLOSED_OPTION, JOptionPane.WARNING_MESSAGE);
        }
        updateSpecList();//更新专业码列表
        updateSubSpecList();//更新小专业码列表
        updateYearClassNumList();



    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTextFieldSpecialtyCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSpecialtyCodeActionPerformed
        // TODO add your handling code here:
        //如果该专业码存在，回车后则自动显示专业名字
        if (codecMethod.hasSpecialtyCodeExisted(this.jTextFieldSpecialtyCode.getText())) {
            this.jTextFieldSpecialtyMeaning.setText(codecMethod.getSpecialyMeaning(this.jTextFieldSpecialtyCode.getText()));
        } else {
            this.jTextFieldSpecialtyMeaning.setText(null);
        }
    }//GEN-LAST:event_jTextFieldSpecialtyCodeActionPerformed

    private void jTextFieldSubSpecCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSubSpecCodeActionPerformed
        // TODO add your handling code here:
        //如果该小专业码存在，回车后则自动显示专业名字
        if (codecMethod.hasSubSpecCodeExisted(this.jTextFieldSubSpecCode.getText())) {
            this.jTextFieldSubSpecMeaning.setText(codecMethod.getSubSpecMeaning(this.jTextFieldSubSpecCode.getText()));
        } else {
            this.jTextFieldSubSpecMeaning.setText(null);
        }
    }//GEN-LAST:event_jTextFieldSubSpecCodeActionPerformed

    private void jComboBoxSpecialtyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSpecialtyItemStateChanged
        // TODO add your handling code here:
        //手动改变专业码列表的选项
        System.out.println(this.jComboBoxSpecialty.getSelectedIndex());
        updateSubSpecList();//更新小专业码列表
        updateYearClassNumList();
    }//GEN-LAST:event_jComboBoxSpecialtyItemStateChanged

    private void jComboBoxSubSpecItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxSubSpecItemStateChanged
        // TODO add your handling code here:
        updateYearClassNumList();
    }//GEN-LAST:event_jComboBoxSubSpecItemStateChanged

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        //删除小专业码中的该项
        if (this.jComboBoxSpecialty.getSelectedIndex() != -1 && this.jComboBoxSubSpec.getSelectedIndex() != -1 && this.jComboBoxYearClassNum.getSelectedIndex() != -1) {
            String code = this.jComboBoxSubSpec.getSelectedItem().toString().substring(0, 2);

            codecMethod.deleteCodeSum(this.jComboBoxSpecialty.getSelectedItem().toString().substring(0, 1) + code +
                    this.jComboBoxYearClassNum.getSelectedItem().toString());
            codecMethod.updateSubSpec();
            codecMethod.updateSpecialty();//更新专业码表
            //更新视图
            updateSpecList();
            updateSubSpecList();
            updateYearClassNumList();
            JOptionPane.showConfirmDialog(null, "删除成功！", "提示", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showConfirmDialog(null, "没有数据，无法进行删除操作！", "提示", JOptionPane.CLOSED_OPTION, JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* java.awt.EventQueue.invokeLater(new Runnable() {

        public void run() {
        new codecUI().setVisible(true);
        }
        });*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JComboBox jComboBoxSpecialty;
    private javax.swing.JComboBox jComboBoxSubSpec;
    private javax.swing.JComboBox jComboBoxYearClassNum;
    private javax.swing.JLabel jLabelClass;
    private javax.swing.JLabel jLabelClassNum;
    private javax.swing.JLabel jLabelSpecialty;
    private javax.swing.JLabel jLabelSpecialtyCode;
    private javax.swing.JLabel jLabelSpecialtyMeaning;
    private javax.swing.JLabel jLabelSubSpec;
    private javax.swing.JLabel jLabelSubSpecCode;
    private javax.swing.JLabel jLabelSubSpecMeaning;
    private javax.swing.JLabel jLabelYear;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelSet;
    private javax.swing.JTabbedPane jTabbedPaneSet;
    private javax.swing.JTextField jTextFieldClassNum;
    private javax.swing.JTextField jTextFieldSpecialtyCode;
    private javax.swing.JTextField jTextFieldSpecialtyMeaning;
    private javax.swing.JTextField jTextFieldSubSpecCode;
    private javax.swing.JTextField jTextFieldSubSpecMeaning;
    private javax.swing.JTextField jTextFieldYear;
    // End of variables declaration//GEN-END:variables
}
